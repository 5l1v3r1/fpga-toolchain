schedules:
- cron: "0 4 * * *"
  displayName: Nightly build at 0400 UTC
  branches:
    include:
    - master
  always: true

stages:
- stage: build_bba
  displayName: Build ECP5 chipdb (*.bba)
  jobs:
  - job: build_bba
    displayName: Build ECP5 chipdb (*.bba)
    pool:
      vmImage: 'ubuntu-18.04'
    steps:
    - bash: ./build-bba.sh
      displayName: Build ECP5 chipdb (*.bba)
      name: build_bba
    - publish: _packages/build_linux_x86_64/ecp5-bba-linux_x86_64-nightly.tar.gz
      artifact: ecp5-bba

- stage: build_toolchain
  displayName: build toolchain
  jobs:
  - job: build_toolchain
    displayName: Build toolchain
    strategy:
      matrix:
        linux_x86_64:
          ARCH: linux_x86_64
          vm_image: ubuntu-18.04
        osx:
          ARCH: darwin
          vm_image: macOS-10.15
    pool:
      vmImage: '$(vm_image)'
    steps:
    - download: current
      artifact: ecp5-bba
    - bash: |
        RELEASE_TAG=nightly-$(date +'%Y%m%d')
        # create pipeline variable
        echo "##vso[task.setvariable variable=RELEASE_TAG]$RELEASE_TAG"
    - bash: cp $(Pipeline.Workspace)/ecp5-bba/ecp5-bba-linux_x86_64-nightly.tar.gz $(Build.Repository.LocalPath)/chipdb.tar.gz
      displayName: Copy BBA artifact
    - bash: ./build.sh $(ARCH)
      displayName: Build toolchain
      name: build_toolchain
    - publish: _packages/build_$(ARCH)/fpga-toolchain-$(ARCH)-$(RELEASE_TAG).tar.gz
      artifact: fpga-toolchain-$(ARCH)-$(RELEASE_TAG)
  - job: build_toolchain_windows_amd64
    displayName: Build toolchain windows_amd64
    pool:
      vmImage: vs2017-win2016
    variables:
      ARCH: windows_amd64
      MINGW_ARCH: x86_64
    steps:
    - script: |
        git clone https://github.com/msys2/msys2-ci-base.git %CD:~0,2%\msys64
        %CD:~0,2%\msys64\usr\bin\rm -rf %CD:~0,2%\msys64\.git
      displayName: Install MSYS2
    - script: |
        set PATH=%CD:~0,2%\msys64\usr\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem
        %CD:~0,2%\msys64\usr\bin\pacman --noconfirm -Syyuu
      displayName: Update MSYS2
    - script: |
        set PATH=%CD:~0,2%\msys64\usr\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem
        %CD:~0,2%\msys64\usr\bin\pacman --noconfirm --needed -S git base-devel mingw-w64-x86_64-toolchain mingw-w64-x86_64-cmake
        %CD:~0,2%\msys64\usr\bin\pacman --noconfirm -Scc
      displayName: Install Toolchain
    - script: |
        set PATH=C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem
        %CD:~0,2%\msys64\usr\bin\sed -i "s|#CacheDir.*|CacheDir=/c/Users/%USERNAME%/AppData/Local/Temp|g" /etc/pacman.conf
        set MSYS=winsymlinks:nativestrict
        %CD:~0,2%\msys64\msys2_shell.cmd -defterm -no-start -mingw64 -full-path -here -c "./build.sh windows_amd64"
      displayName: CI-Build
      env:
        MSYSTEM: MINGW64
        CHERE_INVOKING: yes
        MINGW_INSTALLS: mingw64

- stage: publish_release
  displayName: publish release
  # only generate a github release on master (dev branches still have artifacts that can be downloaded)
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
  jobs:
  - job: publish_release
    displayName: publish_release
    pool:
      vmImage: ubuntu-18.04
    steps:
    - bash: |
        RELEASE_TAG=nightly-$(date +'%Y%m%d')
        # create pipeline variable
        echo "##vso[task.setvariable variable=RELEASE_TAG]$RELEASE_TAG"
    - download: current
      patterns: '**/fpga-toolchain*.*'
    - task: GitHubRelease@0
      inputs:
        gitHubConnection: open-tool-forge-release
        repositoryName: '$(Build.Repository.Name)'
        action: 'create'
        target: '$(Build.SourceVersion)'
        tagSource: 'manual'
        tag: '$(RELEASE_TAG)'
        addChangeLog: false
        releaseNotesSource: 'input'
        releaseNotes: '$(RELEASE_TAG)'
        assets: |
          $(Pipeline.Workspace)/**/fpga-toolchain*.tar.gz
          $(Pipeline.Workspace)/**/fpga-toolchain*.zip
